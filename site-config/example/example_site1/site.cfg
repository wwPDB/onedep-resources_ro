[example]
# This config file lists the configurations which are required for a OneDep installation

#
### Required
#

#
## Site name and location
#
# type of OneDep site - used for apache config i.e. development, annotation, deposition, validation
site_type = {development}
#
# This sets the location of the OneDep site - for example PDBe, RCSB, EMDB
site_name = {PDBe}

# the same as above but in lowercase
# the variable at the very top at the file must be set to the same name
wwpdb_site_loc = {$WWPDB_SITE_LOC|lc}

# This sets the name of the OneDep site - for example PDBE_PROD, PDBE_DEV
site_prefix = {$WWPDB_SITE_ID|uc}

# the same as above but in lowercase
site_prefix_lc = {$WWPDB_SITE_ID|lc}

# site name in human readable form - e.g. staging
site_suffix = {dev}

# deposition language settings - used for setting Django language and time-zone
language_code = en-us
time_zone = Europe/London

# deposition server URL - Sent in email to depositors as a link for them to access the server for example deposit.wwpdb.org
site_deposit_ui_host_name = {deposit.localhost}

# FTP host URL - used to upload files to OneDep via FTP - e.g. ftp.pdbe-da.ebi.ac.uk
ftp_host_name = {ftp.localhost}

#
## Directories
#

# The OneDep system is installed in the following directory e.g. /wwpdb/onedep
top_software_dir = {$ONEDEP_PATH|lc}
#
# name of the directory used for storing OneDep tools - can be shared with other sites or site specific e.g. tools-centos-8
tools_name = {tool-centos-8}

# This sets the path for data created by the OneDep system. A "data" folder is made as a subfolder of this folder
# This does not have to be the same as the above location e.g. /wwpdb/onedep
top_data_dir = {$ONEDEP_PATH|lc}

#
## Databases
#

# The OneDep system uses MySQL databases which do not have to be on the local machine.
# host name, port and usernames and password have to be set

# host name
# this is where your MySQL server is located. If the --setup-database flag is used then a MySQL instance is installed on this server
site_db_host_name = {127.0.0.1}
# port - usually this is 3306
site_db_port_number = {3306}
#
# read + write username
# this will be setup on the MySQL server if the setup is run with the --setup-database flag
site_db_admin_user = {admin}

# read + write password
# this will be setup on the MySQL server if the setup is run with the --setup-database flag
site_db_admin_pass = {password}

# read only username
# this will have to be added to the MySQL instance manually
site_db_ro_user = {wwpdb_read}

# read only password
# this will have to be added to the MySQL instance manually
site_db_ro_pass = {password}

#
## API backend
#
# The OneDep API services use rabbitMQ server which needs to be setup prior to use
#
# TODO add rabbitMQ server setup to the setup script
#
# server where rabbitMQ is located - can be the same host
site_rbmq_server_host = {localhost}

# rabbitMQ virtual host name - used within rabbitMQ
site_rbmq_virtual_host = {rbmq-vhost}

# ?
site_rbmq_client_protocol = {STANDARD}

# rabbitMQ ports
site_rbmq_ssl_server_port = {5673}
site_rbmq_server_port = {5672}

# rabbitMQ username
site_rbmq_user_name = {rmq_user}

# rabbitMQ password
site_rbmq_password = {rmq_password}

#
## Usernames and passwords for OneDep and access to services used by OneDep
#
#
# install user and group - this is used by the installation script to set permissions
# local_install_owner is used to install the software
# local_service_owner is used to run the software and owns the data
# these may be the same user or different users
#
local_service_owner = {$USER}
local_service_group = {$USER}
local_install_owner = {$USER}
local_install_group = {$USER}
#
# Data exchange with BMRB requires a user registered at BMRB
bmrb_exchange_user = {ASK_BMRB}
#
# There are several services maintained at RCSB which require usernames and passwords
#
# CVS repository for CCD and PRD repositories
#
site_refdata_cvs_user = {ASK_RCSB}
site_refdata_cvs_password = {ASK_RCSB}
site_refdata_cvs_host = {ASK_RCSB}
#
# Access to PyPi registry and software repositories at RCSB
#
cs_user = {ASK_RCSB}
cs_pass = {ASK_RCSB}
cs_host_base = {ASK_RCSB}
#
# SVN repositories for mmCIF dictionary and Taxonomy information
#
svn_user = {ASK_RCSB}
svn_pass = {ASK_RCSB}
#
# rsync server at RCSB which contains da_internal_combine database
#
rcsb_rsync_server_user = {ASK_RCSB}
rcsb_rsync_server_pwd = {ASK_RCSB}
rcsb_rsync_server_host = {ASK_RCSB}
rcsb_rsync_server_port = {ASK_RCSB}
#
# list of annotators
# dictionary with site name in caps as the first key {'PDBE': {'INITIALS': {'fname': 'John', 'lname': 'Smith'}}}
annotator_user_name_dict = {'TEST':{
                           'INITIALS': {'fname': 'John', 'lname': 'Smith'}
                           }
                           }
#
#
#
### Optional
#
#
# NCBI access
#
# rate of access to NCBI is limited unless an API access key is provided
# would need to obtain a key from NCBI
NCBI_API_KEY = {NCBI_KEY}

# email address used to
annotation_email = {annotator@local.localhost}

#
## Access to FTP for generating public Validation Reports
#
# FTP site - will default to wwpdb.org if not set
site_ftp_server = {}
site_ftp_server_prefix =
#
# local file paths for accessing the public FTP
site_pdb_ftp_root_dir =
site_emdb_ftp_root_dir =

#
## OneDep can use a Remote compute cluster to do computational tasks
#
# compute cluster settings
use_compute_cluster =

# command used to submit a task
bsub_command =

# if its necessary to ssh into a login node before submitting a task this sets the node to login to
#bsub_login_node =

# timeout given to tasks when running remotely
bsub_timeout =

# number of retries to try for remote tasks
bsub_retry_delay =

## PDBe specific
# database for all public categories
site_da_internal_db_all_name =


[install_environment]
# used for building the OneDep system
#
#
install_kernel=Linux
os_version=redhat_7
site_type = DEVELOPMENT
# For some packages setting this to yes allow rebuilding without
# removing/overwriting the build directory.  Useful for debugging.
#
# build_in_place=no
#
# other variables should be in the common.cfg - current limitation of --nocache option means they are repeated here
wwpdb_site_id=%(site_prefix)s
install_variant=%(tools_name)s
#
top_dir=%(site_deploy_path)s
top_site_dir = %(site_deploy_path)s
top_wwpdb_site_config_dir=%(top_wwpdb_site_config_dir)s
top_install_source_path=%(site_deploy_path)s
#apache setup
server_local_top_dir=%(server_local_top_dir)s
server_local_dir=%(server_local_dir)s
apache_version=%(apache_version)s
apache_prefix_dir=%(apache_prefix_dir)s

scratch_local_dir=%(scratch_local_dir)s
fast_store_local_dir=%(fast_store_local_dir)s
#
local_service_owner=%(local_service_owner)s
local_service_group=%(local_service_group)s
local_install_owner=%(local_install_owner)s
local_install_group=%(local_install_group)s
#
top_install_dir=%(site_local_apps_path)s
#
scripts_dir=%(top_dir)s/scripts
server_dir=%(top_dir)s/servers
#
cvsroot=%(cvsroot)s
cs_url=%(cs_url)s
cs_pw=%(cs_pass)s
cs_user=%(cs_user)s
#
prefix=%(top_install_dir)s
distrib_dir=%(top_install_dir)s/distrib
distrib_source=%(top_install_dir)s/distrib_source
distrib_source_dir=%(top_install_dir)s/distrib_source
build_dir=%(top_install_dir)s/build
build_py_dir=%(top_install_dir)s/build/python
package_dir=%(top_install_dir)s/packages
#
# Make sure the local install bin directory precedes an otherwise minimal path.
#
path=%(top_install_dir)s/bin:$PATH
